// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º
//   [] –ª—ñ—Ç–µ—Ä–∞–ª –º–∞—Å–∏–≤—É
//   –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å length —Ç–∞ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è
  
//   –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ Jazz —ñ Blues
//   –î–æ–¥–∞–π—Ç–µ 'Rock&roll' —É –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É
//   –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
//   –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. 
//   –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
//   –í—Å—Ç–∞–≤—Ç–µ 'Contry' —Ç–∞ 'Reggie' –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É
//   –ü–æ–¥–∏–≤–∏—Ç—Ç—Å—å –º–µ—Ç–æ–¥–∏ push unshift shift splice
// */

// const genres = ["jazz", "blues"];
// genres [genres.length] = "Rock&Roll";
// genres.push("Rock&Roll")
// genres.unshift("Contry", 'Reggie', "Rock&Roll", "Rock&Roll");
// console.log(genres);
// console.log(genres[3]);
// genres.pop();
// genres.splice(0, 2, 12)
// console.log(genres)
// console.log(genres[genres.length -1]);





// =================================================
/*  
  Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, 
  –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –∑–º—ñ–Ω–Ω—ñ–π –≤–µ–ª–∏—á–∏–Ω —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
  –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º. 
  –ú–µ—Ç–æ–¥ split
*/
// const values = "10 120";
// const array = values.split(" ");
// const result = array[0] * array[1];
// console.log(result)

// ==================================================
/*
  Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for.
  –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É 
  —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. 
  
  –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –ø–µ—Ä—à–æ–≥–æ.
*/

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];
// for(let i = 0; i < fruits.length ; i += 1){
//     console.log(`${i + 1} : ${fruits[i]}`)
// }
// ===========================================================

//   Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
//   –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π 
//   –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –∑–º—ñ–Ω–Ω–∏—Ö names —ñ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è 
//   —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. 
  
//   –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ 
//   –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
//   –ú–µ—Ç–æ–¥ split
// */

// const names = "Jacob,William,Solomon,Kate";
// const phones = "38001234567,38001112233,380055566377,38099912233";

// const namesList = names.split(",");
// const phonesList = phones.split(",");
// for(let i = 0; i < namesList.length; i += 1){
//     console.log(`${namesList[i]} : ${phonesList[i]}`)
// }
// =========================================================
/*
  Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ 
  —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è 
  –ø—Ä–æ–±—ñ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
  –º–µ—Ç–æ–¥–∏ pop shift join
*/

// const string = " Welcome to the future ";
// const stringList = string.trim().split(" ")
// for (let i = 1; i < stringList.length -1; i += 1){
//     console.log(stringList[i])
// }

// stringList.pop();
// stringList.shift();

// console.log(stringList);

// ==========================================================
/*
  Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≤–µ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫ –ª—ñ—Ç–µ—Ä)
  —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
  –ú–µ—Ç–æ–¥–∏ split reverse join
*/
// const string = "Welcome to the future";
// const stringList = string.split(" ").reverse().join(" ")
// console.log(stringList)

// const reversedString = string.split(" ").reverse().join(" ");
// console.log(reversedString);

// ========================================================
/*
  Example 7 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. 
  –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. 
  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª for of –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
*/

// const numbers = [5, 11, 9, 7, 78, 3, -1 ];
// let smallersNumber = Infinity;
// for(const value of numbers){
// if(value < smallersNumber){
//     smallersNumber = value;

// }
// } console.log(smallersNumber)

// =========================================
/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤.
 */

// const array1 = [5, 10, 15, 20];
// const array2 = [10, 20, 30];
// let total = 0;

// const array3 = array1.concat(array2);
// for(const value of array3 ){
//     total += value
// }
// console.log(total);
// =============================================
/*
 * –î–µ–ª–∞–µ–º slug –≤ URL –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ dev.to)
 * –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤
 *
 * - –ù–æ—Ä–º–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É
 * - –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Å–ª–æ–≤–∞–º
 * - –°—à–∏–≤–∞–µ–º –≤ —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
 */

// –î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è top-10-benefits-of-react-framework
// const title = 'Top 10 benefits of React framework';
// const normalizeTitle = title.normalize().toLowerCase().split(" ").join("-")
// console.log(normalizeTitle)

// =====================================================
/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π.
 * –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ¬´JavaScript¬ª, —Ç–æ –Ω–∞ –≤—ã—Ö–æ–¥–µ –¥–æ–ª–∂–µ–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞ ¬´jAVAsCRIPT¬ª.
 */

// const string = '–∫–ê–¢–Ø —á–£–ë–ê–ß';
// let invertedString = "";
// const stringList = string.split("");
// for(const letter of stringList){
//     if(letter === letter.toLowerCase()){
//         invertedString += letter.toUpperCase()
//     }else{
//         invertedString += letter.toLowerCase() 
//     }
// }

// console.log(invertedString)
// ==============================================
// * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –æ–¥–Ω–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
//  * –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ.
//  * –ü—É—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞  –≤ —Å—Ç—Ä–æ–∫–µ –±—É–¥—É—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –∑–∞–ø—è—Ç–æ–π.
//  * - –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ for
//  * - –ü–æ—Ç–æ–º —á–µ—Ä–µ–∑ join()
//  */

// const friends = ['Mango', 'Poly', 'Kiwi', 'Ajax'];
// let string = "";

// for(const friend of friends){
//     string += friend
// }
// string = friends.join(",")
// console.log(string)
// ====================================================
// * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ –ª–æ–≥–∏–Ω–∞
//  * - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω–∞ –Ω–µ—Ç, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–µ –Ω–∞–π–¥–µ–Ω.'
//  * - –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ª–æ–≥–∏–Ω, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–∞–π–¥–µ–Ω.'
//  *
//  * - –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ for
//  * - –ü–æ—Ç–æ–º —á–µ—Ä–µ–∑ for...of
//  * - –õ–æ–≥–∏–∫–∞ break
//  * - –ú–µ—Ç–æ–¥ includes() —Å —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
//  */

// const logins = ['m4ngoDoge', 'k1widab3st', 'poly1scute', 'aj4xth3m4n'];
// const loginToFind = 'aj4xth3m4n';
// let message = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–µ –Ω–∞–π–¥–µ–Ω.';

// const message = logins.includes(loginToFind) ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω.' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω.'
// console.log(message)

// const message = logins.includes(loginToFind)
//   ? `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω.`
//   : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;

// console.log(message);
// ===================================================
// function count(countFrom = 0, countTo = 10, step = 1) {
//     console.log(`countFrom = ${countFrom}, countTo = ${countTo}, step = ${step}`);
  
//     for (let i = countFrom; i <= countTo; i += step) {
//       console.log(i);
//     }
//   }
  
//   count(1, 5); // countFrom = 1, countTo = 5, step = 1
//   count(2); // countFrom = 2, countTo = 10, step = 1
//   count(); // countFrom = 0, countTo = 10, step = 1



// =====================================
// function checkAge(age){
//     if(age >= 20){
//     console.log("You are an adult")
//         return ;
//     }
//     console.log ("You are a minor")
// }
// checkAge(10)
// ==================================
// function checkPassword(password) {
//     const ADMIN_PASSWORD = "jqueryismyjam";
// if(password === ADMIN_PASSWORD ){
//     console.log("Welcome!")
//     return 
// }
// console.log("Access denied, wrong password!")

// }
// checkPassword("jqam")
// ====================================
// function checkStorage(available, ordered){
//    if (ordered === 0){
//     console.log ("Your order is empty!")
//         return ;
//     }
//     if (ordered > available){
//         console.log("Your order is too large, not enough goods in stock!")
//         return ;
//     }
//     console.log("The order is accepted, our manager will contact you")
   
// }

// checkStorage(100, 13)
// ==================================
// const fruits = ["apple", "plum", "pear", "orange"];
// const firstElement = fruits[0]
// console.log(firstElement)
// const secondElement = fruits[2]
// console.log(secondElement)
// const lastElement = fruits[3]
// console.log(lastElement)
// ============================

// const fruits = ["apple", "plum", "pear", "orange"];
// fruits[0] = 'banana'
// fruits[3] = "peach"
// console.log(fruits)
// ==============================
// const fruits = ["apple", "plum", "pear", "orange"];
// const fruitsArrayLength = fruits.length
// console.log(fruitsArrayLength)
// ==========================
// const fruits = ["apple", "plum", "pear", "orange"];
// const lastElementIndex = fruits.length -1;

// const lastElement = fruits[lastElementIndex]
// console.log(lastElement);
// ===============================
// function getExtremeElements(array){
//     const arrayBack = [array[0], array[array.length -1]]
// console.log(arrayBack)
// }
// getExtremeElements([1, 2, 3, 4, 5])

// getExtremeElements(["Earth", "Mars", "Venus"])
// ========================================
// function splitMessage(message, delimiter) {
//     let words;
//     words = message.split(delimiter)
//     console.log(words)
// }
// splitMessage("Mango hurries to the train", " ")
// splitMessage("Mango", "")
// splitMessage("best_for_week", "_")
// =================================
// function calculateEngravingPrice(message, pricePerWord){
//     messageList = message.split(" ").length;
//     messageList *= pricePerWord;
//     console.log(messageList)
// }
// calculateEngravingPrice("JavaScript is in my blood", 10)
// calculateEngravingPrice("JavaScript is in my blood", 20)
// calculateEngravingPrice("Web-development is creative work", 40)
// calculateEngravingPrice("Web-development is creative work", 20)
// ============================================
// function makeStringFromArray(array, delimiter) {
//     let string;
//     string = array.join(" ");
//     console.log(string)
// }
// makeStringFromArray(["Mango", "hurries", "to", "the", "train"], " ")
// makeStringFromArray(["M", "a", "n", "g", "o"], "")
// makeStringFromArray(["top", "picks", "for", "you"], "_")
// ==============================================
// function slugify(title){
//     let string = "";
//     string = title.toLowerCase().split(" ").join("-")
//     console.log(string)
// }
// slugify("Arrays for begginers")
// slugify("English for developer")
// slugify("Ten secrets of JavaScript")
// slugify("How to become a JUNIOR developer in TWO WEEKS")
// ========================================
// const fruits = ['apple', 'plum', 'pear', 'orange', 'banana'];
// const firstTwoEls = fruits.splice(0, 3)
// console.log(firstTwoEls)
// const nonExtremeEls = fruits.splice(1, 4)
// console.log(nonExtremeEls)

// const lastThreeEls = fruits.splice(-3)
// console.log(lastThreeEls)

// =====================================
// const oldClients = ['Mango', 'Ajax', 'Poly', 'Kiwi'];
// const newClients = ['Peach', 'Houston'];
// const allClients = oldClients.concat(newClients)
// console.log(allClients)
// =================================
// function makeArray(firstArray, secondArray, maxLength){
//     const newArray = firstArray.concat(secondArray)
//     if(newArray.length > maxLength){
// console.log(newArray.slice(0, maxLength))
//     }else{
//        console.log(newArray) 
// } 
//     } 
//     makeArray(["Mango", "Poly"], ["Ajax", "Chelsea"], 3)
//     makeArray(["Mango", "Poly", "Houston"], ["Ajax", "Chelsea"], 4)
//     makeArray(["Mango"], ["Ajax", "Chelsea", "Poly", "Houston"], 3)
//     makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus"], 2)
    
// ==========================================
// const start = 3;
// const end = 7;
// for(let i = start; i < end; i +=1){
//     console.log(i)
// }
// ===================================
// function calculateTotal(number){
//     let total = 0;
//     for(let i = 1; i <= number; i += 1){
// total += i
//     }console.log(total)
// }

// calculateTotal(1)
// calculateTotal(3)
// calculateTotal(7)
// calculateTotal(18)
// calculateTotal(24)
// calculateTotal()
// =========================================
// const fruits = ['apple', 'plum', 'pear', 'orange'];
// for(let i = 0; i < fruits.length; i += 1){
//     const fruit = fruits[i]
//     console.log(fruit)
// }
// ===============================
// function calculateTotalPrice(order){
// let total = 0;
// for(let i = 0; i < order.length; i += 1){
//     total += order[i]
   
// }
//  console.log(total)
// }
// calculateTotalPrice([12, 85, 37, 4])
// calculateTotalPrice([164, 48, 291])
// calculateTotalPrice([412, 371, 94, 63, 176])
// calculateTotalPrice()
// ========================================
// function findLongestWord(string) {
//     // Change code below this line
//   const words = string.split(" ")
//   let longesWord = "";
// for(const word of words ){
//      if (word.length > longesWord.length){
//         longesWord = word
//       }
// }
//       console.log(longesWord) 
//   }

// findLongestWord("The quick brown fox jumped over the lazy dog")
// findLongestWord("Google do a roll")
// findLongestWord("May the force be with you")
// ==========================================================
// function createArrayOfNumbers(min, max) {
//     const numbers = [];
// for(let i = min; i <= max; i += 1)
//      numbers.push(i)
//     console.log(numbers)
// }
// createArrayOfNumbers(1, 3)
// createArrayOfNumbers(14, 17)
// createArrayOfNumbers(29, 34)

// ====================================
// function filterArray(numbers, value) {
   
//   const biggestNumbers = [];
//   for(let i = 0; i < numbers.length; i += 1){
// if(numbers[i] > value){
//      biggestNumbers.push(numbers[i])
// }
//   }
//   console.log(biggestNumbers)
// }
// filterArray([1, 2, 3, 4, 5], 3)
// filterArray([1, 2, 3, 4, 5], 4)
// filterArray([1, 2, 3, 4, 5], 5)
// filterArray([12, 24, 8, 41, 76], 38)
// filterArray([12, 24, 8, 41, 76], 20)
// ===============================================
